#!/usr/bin/env bash
set -o errexit -o pipefail


## SCRIPT VARS, DON'T MODIFY
########################################

SCRIPT_PATH="$(dirname $(readlink -f ${0}))"
SOXY_DIR="${SOXY_DIR:-${HOME}/.soxy}"
SOXY_CONF="${SOXY_DIR}/config"
SOXY_LOG="${SOXY_DIR}/soxy.log"
SOXY_PID_FILE="${SOXY_PID_FILE:-${SOXY_DIR}/soxy.pid}"


## CREATE SOXY DIR IF MISSING
########################################

[[ -d "${SOXY_DIR}" ]] || mkdir -p ${SOXY_DIR}


## LOAD/COPY SOXY CONFIG
########################################

if [[ ! -r "${SOXY_CONF}" ]]; then
    cp "${SCRIPT_PATH}/config.sample" ${SOXY_CONF}
    echo "WARNING: Soxy config not found, default config file created at ${SOXY_CONF}"
    exit 1
fi

source ${SOXY_CONF}


## FUNCTIONS
########################################

function getPid {

    # Get the PID
    local PID="$(ps ax | grep ssh | grep ${LOCAL_PORT} | awk '{ print $1 }')"

    # Return the PID
    echo ${PID}

}


function startSocks {

    # Echo status message to console
    printf "Starting Soxy proxy on port %-6s    \n" ${LOCAL_PORT}

    if [[ -z "$(getPid)" ]]; then

        # Establish SOCKS connection
        ssh -qfCD 0.0.0.0:${LOCAL_PORT} ${REMOTE_USER}@${REMOTE_HOST} -p ${REMOTE_PORT} -N & > /dev/null 2>&1
        printf "Success! Soxy proxy running on port ${LOCAL_PORT} (PID: $(getPid)) "
        echo "$(getPid)" > "${SOXY_PID_FILE}"

    else
        echo "Soxy already running, must be stopped first"

    fi

}


function stopSocks {
    # Get the PID
    local PID="$(getPid)"

    # Echo status message to console
    printf "Stopping Soxy proxy on port %-3s (PID: ${PID}) " ${LOCAL_PORT}

    if [[ ! -z "${PID}" ]]; then

        # Kill the process
        kill ${PID} > /dev/null 2>&1
        if [[ -f ${SOXY_PID_FILE} ]]; then
            rm -rf ${SOXY_PID_FILE}
        fi
    else
        echo "No running Soxy process found"
    fi

}


function getStatus {

    # Get the PID
    local PID="$(getPid)"

    if [[ ! -z "${PID}" ]]; then
        echo "Soxy proxy running on port ${LOCAL_PORT} (PID: ${PID})"
    else

        echo "No Soxy proxy currently running"

        if [[ "${AUTO_RECONNECT}" == true ]] || [[ "${AUTO_RECONNECT}" -gt 0 ]]; then
            echo "NOTICE: Auto-reconnect enabled, attempting to restart Soxy"
            stopSocks && startSocks
        fi

    fi

}

## SWITCHES
########################################

case ${1} in

    'start')
        startSocks
    ;;

    'stop')
        stopSocks
    ;;

    'restart')
        stopSocks && startSocks
    ;;

    'status')
        getStatus
    ;;

    *)
        echo "Usage: $(basename ${0}) { start | stop | restart | status }"
    ;;

esac
